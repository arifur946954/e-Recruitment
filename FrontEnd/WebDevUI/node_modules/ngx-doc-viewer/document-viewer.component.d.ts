import { NgZone, OnDestroy, OnChanges, SimpleChanges, QueryList, ElementRef } from '@angular/core';
import { DomSanitizer, SafeResourceUrl } from '@angular/platform-browser';
import { EventEmitter } from '@angular/core';
import * as ɵngcc0 from '@angular/core';
export declare type viewerType = 'google' | 'office' | 'mammoth' | 'pdf' | 'url';
export declare class NgxDocViewerComponent implements OnChanges, OnDestroy {
    private domSanitizer;
    private ngZone;
    fullUrl: SafeResourceUrl;
    externalViewer: boolean;
    docHtml: string;
    configuredViewer: viewerType;
    private checkIFrameSubscription;
    constructor(domSanitizer: DomSanitizer, ngZone: NgZone);
    loaded: EventEmitter<any>;
    url: string;
    queryParams: string;
    viewerUrl: string;
    googleCheckInterval: number;
    disableContent: 'none' | 'all' | 'popout' | 'popout-hide';
    googleCheckContentLoaded: boolean;
    viewer: viewerType;
    iframes: QueryList<ElementRef>;
    ngOnDestroy(): void;
    ngOnChanges(changes: SimpleChanges): Promise<void>;
    iframeLoaded(): void;
    reloadIFrame(iframe: HTMLIFrameElement): void;
    private getDocxToHtml;
    private fileToArray;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<NgxDocViewerComponent, never>;
    static ɵcmp: ɵngcc0.ɵɵComponentDefWithMeta<NgxDocViewerComponent, "ngx-doc-viewer", never, { "url": "url"; "queryParams": "queryParams"; "viewerUrl": "viewerUrl"; "googleCheckInterval": "googleCheckInterval"; "disableContent": "disableContent"; "googleCheckContentLoaded": "googleCheckContentLoaded"; "viewer": "viewer"; }, { "loaded": "loaded"; }, never, never>;
}

//# sourceMappingURL=document-viewer.component.d.ts.map