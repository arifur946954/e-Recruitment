import { EventEmitter, OnInit, OnDestroy, OnChanges, SimpleChanges } from '@angular/core';
import { GeocoderService } from './geocoder.service';
import { FormControl, FormGroup } from '@angular/forms';
import { Subscription } from 'rxjs';
import * as ɵngcc0 from '@angular/core';
export declare class GeocoderComponent implements OnInit, OnDestroy, OnChanges {
    geocoderService: GeocoderService;
    private geocoderRef;
    type: string;
    searchInput: string;
    placeholder: string;
    resultCountLimit: number;
    resultFieldsToShow: Array<string>;
    province: string;
    placeFound: EventEmitter<any>;
    formattedPlaceholder: string;
    resultsVisible: boolean;
    searchField: FormControl;
    searchForm: FormGroup;
    places: any[];
    collations: any[];
    searchThreshold: number;
    foundPlace: any;
    selectedItem: any[];
    selectedIndex: number;
    private subscriptions;
    clickout(event: any): void;
    constructor(geocoderService: GeocoderService);
    ngOnInit(): void;
    ngOnChanges(changes: SimpleChanges): void;
    ngOnDestroy(): void;
    private subscribeToSearchFieldValueChanges;
    private suggest;
    free(): Subscription;
    lookup(id: string): void;
    clear(): void;
    clearPlaces(): void;
    handleEnter(): void;
    isNoResultsFound(): boolean;
    showCollations(): boolean;
    fillInput(content: string, emitEvent?: boolean): void;
    isHighlighted(i: any): boolean;
    moveUp(): void;
    moveDown(): void;
    resetIndex(): void;
    canQuery(): boolean;
    canClear(): boolean;
    formatPlaceholder(placeholder: string): string;
    onCollationClick(name: string): void;
    showResults(): void;
    private hideResults;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<GeocoderComponent, never>;
    static ɵcmp: ɵngcc0.ɵɵComponentDefWithMeta<GeocoderComponent, "geocoder", never, { "resultCountLimit": "resultCountLimit"; "resultFieldsToShow": "resultFieldsToShow"; "type": "type"; "searchInput": "searchInput"; "placeholder": "placeholder"; "province": "province"; }, { "placeFound": "placeFound"; }, never, never>;
}

//# sourceMappingURL=geocoder.component.d.ts.map