{"version":3,"file":"geocoder.service.d.ts","sources":["geocoder.service.d.ts"],"names":[],"mappings":"AAAA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA","sourcesContent":["import { HttpClient } from '@angular/common/http';\r\nimport { ReverseOptions, ReverseGeometry, SuggestOptions, LookupOptions } from './locatieserver.model';\r\nexport declare class GeocoderService {\r\n    private http;\r\n    geocoderBaseUrl: string;\r\n    constructor(http: HttpClient);\r\n    suggest(query: string, options?: SuggestOptions): Promise<{\r\n        collations: any[];\r\n        places: {\r\n            highlight: any;\r\n            id: string;\r\n            score: number;\r\n            type: string;\r\n            weergavenaam: string;\r\n        }[];\r\n    }>;\r\n    suggest$(query: string, options?: SuggestOptions): import(\"rxjs\").Observable<{\r\n        collations: any[];\r\n        places: {\r\n            highlight: any;\r\n            id: string;\r\n            score: number;\r\n            type: string;\r\n            weergavenaam: string;\r\n        }[];\r\n    }>;\r\n    lookup(id: string, options?: LookupOptions): Promise<{}>;\r\n    lookup$(id: string, options?: LookupOptions): import(\"rxjs\").Observable<{}>;\r\n    free(searchTerm: string, options?: SuggestOptions): Promise<any[]>;\r\n    free$(searchTerm: string, options?: SuggestOptions): import(\"rxjs\").Observable<any[]>;\r\n    reverse(location: ReverseGeometry, options?: ReverseOptions): Promise<any[]>;\r\n    reverse$(location: ReverseGeometry, options?: ReverseOptions): import(\"rxjs\").Observable<any[]>;\r\n    private formatCollations;\r\n    private formatPlaces;\r\n    /**\r\n     * Parse WKT in lookup response.\r\n     */\r\n    private formatLookupResponse;\r\n    private formatReverseResponse;\r\n}\r\n"]}