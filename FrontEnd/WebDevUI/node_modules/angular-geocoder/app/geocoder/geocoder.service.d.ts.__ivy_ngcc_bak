import { HttpClient } from '@angular/common/http';
import { ReverseOptions, ReverseGeometry, SuggestOptions, LookupOptions } from './locatieserver.model';
export declare class GeocoderService {
    private http;
    geocoderBaseUrl: string;
    constructor(http: HttpClient);
    suggest(query: string, options?: SuggestOptions): Promise<{
        collations: any[];
        places: {
            highlight: any;
            id: string;
            score: number;
            type: string;
            weergavenaam: string;
        }[];
    }>;
    suggest$(query: string, options?: SuggestOptions): import("rxjs").Observable<{
        collations: any[];
        places: {
            highlight: any;
            id: string;
            score: number;
            type: string;
            weergavenaam: string;
        }[];
    }>;
    lookup(id: string, options?: LookupOptions): Promise<{}>;
    lookup$(id: string, options?: LookupOptions): import("rxjs").Observable<{}>;
    free(searchTerm: string, options?: SuggestOptions): Promise<any[]>;
    free$(searchTerm: string, options?: SuggestOptions): import("rxjs").Observable<any[]>;
    reverse(location: ReverseGeometry, options?: ReverseOptions): Promise<any[]>;
    reverse$(location: ReverseGeometry, options?: ReverseOptions): import("rxjs").Observable<any[]>;
    private formatCollations;
    private formatPlaces;
    /**
     * Parse WKT in lookup response.
     */
    private formatLookupResponse;
    private formatReverseResponse;
}
