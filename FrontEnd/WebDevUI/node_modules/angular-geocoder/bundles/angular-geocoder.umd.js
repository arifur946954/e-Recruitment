(function (global, factory) {
    typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('@angular/core'), require('@angular/common/http'), require('@angular/common'), require('@angular/forms'), require('rxjs/operators'), require('terraformer-wkt-parser')) :
    typeof define === 'function' && define.amd ? define('angular-geocoder', ['exports', '@angular/core', '@angular/common/http', '@angular/common', '@angular/forms', 'rxjs/operators', 'terraformer-wkt-parser'], factory) :
    (global = typeof globalThis !== 'undefined' ? globalThis : global || self, factory(global['angular-geocoder'] = {}, global.ng.core, global.ng.common.http, global.ng.common, global.ng.forms, global.rxjs.operators, global.terraformerWktParser));
}(this, (function (exports, core, http, common, forms, operators, terraformerWktParser) { 'use strict';

    /*! *****************************************************************************
    Copyright (c) Microsoft Corporation.

    Permission to use, copy, modify, and/or distribute this software for any
    purpose with or without fee is hereby granted.

    THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH
    REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY
    AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,
    INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM
    LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR
    OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR
    PERFORMANCE OF THIS SOFTWARE.
    ***************************************************************************** */
    /* global Reflect, Promise */
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b)
                if (Object.prototype.hasOwnProperty.call(b, p))
                    d[p] = b[p]; };
        return extendStatics(d, b);
    };
    function __extends(d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    }
    var __assign = function () {
        __assign = Object.assign || function __assign(t) {
            for (var s, i = 1, n = arguments.length; i < n; i++) {
                s = arguments[i];
                for (var p in s)
                    if (Object.prototype.hasOwnProperty.call(s, p))
                        t[p] = s[p];
            }
            return t;
        };
        return __assign.apply(this, arguments);
    };
    function __rest(s, e) {
        var t = {};
        for (var p in s)
            if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
                t[p] = s[p];
        if (s != null && typeof Object.getOwnPropertySymbols === "function")
            for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
                if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
                    t[p[i]] = s[p[i]];
            }
        return t;
    }
    function __decorate(decorators, target, key, desc) {
        var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
        if (typeof Reflect === "object" && typeof Reflect.decorate === "function")
            r = Reflect.decorate(decorators, target, key, desc);
        else
            for (var i = decorators.length - 1; i >= 0; i--)
                if (d = decorators[i])
                    r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
        return c > 3 && r && Object.defineProperty(target, key, r), r;
    }
    function __param(paramIndex, decorator) {
        return function (target, key) { decorator(target, key, paramIndex); };
    }
    function __metadata(metadataKey, metadataValue) {
        if (typeof Reflect === "object" && typeof Reflect.metadata === "function")
            return Reflect.metadata(metadataKey, metadataValue);
    }
    function __awaiter(thisArg, _arguments, P, generator) {
        function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
        return new (P || (P = Promise))(function (resolve, reject) {
            function fulfilled(value) { try {
                step(generator.next(value));
            }
            catch (e) {
                reject(e);
            } }
            function rejected(value) { try {
                step(generator["throw"](value));
            }
            catch (e) {
                reject(e);
            } }
            function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
            step((generator = generator.apply(thisArg, _arguments || [])).next());
        });
    }
    function __generator(thisArg, body) {
        var _ = { label: 0, sent: function () { if (t[0] & 1)
                throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
        return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function () { return this; }), g;
        function verb(n) { return function (v) { return step([n, v]); }; }
        function step(op) {
            if (f)
                throw new TypeError("Generator is already executing.");
            while (_)
                try {
                    if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done)
                        return t;
                    if (y = 0, t)
                        op = [op[0] & 2, t.value];
                    switch (op[0]) {
                        case 0:
                        case 1:
                            t = op;
                            break;
                        case 4:
                            _.label++;
                            return { value: op[1], done: false };
                        case 5:
                            _.label++;
                            y = op[1];
                            op = [0];
                            continue;
                        case 7:
                            op = _.ops.pop();
                            _.trys.pop();
                            continue;
                        default:
                            if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {
                                _ = 0;
                                continue;
                            }
                            if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) {
                                _.label = op[1];
                                break;
                            }
                            if (op[0] === 6 && _.label < t[1]) {
                                _.label = t[1];
                                t = op;
                                break;
                            }
                            if (t && _.label < t[2]) {
                                _.label = t[2];
                                _.ops.push(op);
                                break;
                            }
                            if (t[2])
                                _.ops.pop();
                            _.trys.pop();
                            continue;
                    }
                    op = body.call(thisArg, _);
                }
                catch (e) {
                    op = [6, e];
                    y = 0;
                }
                finally {
                    f = t = 0;
                }
            if (op[0] & 5)
                throw op[1];
            return { value: op[0] ? op[1] : void 0, done: true };
        }
    }
    var __createBinding = Object.create ? (function (o, m, k, k2) {
        if (k2 === undefined)
            k2 = k;
        Object.defineProperty(o, k2, { enumerable: true, get: function () { return m[k]; } });
    }) : (function (o, m, k, k2) {
        if (k2 === undefined)
            k2 = k;
        o[k2] = m[k];
    });
    function __exportStar(m, o) {
        for (var p in m)
            if (p !== "default" && !Object.prototype.hasOwnProperty.call(o, p))
                __createBinding(o, m, p);
    }
    function __values(o) {
        var s = typeof Symbol === "function" && Symbol.iterator, m = s && o[s], i = 0;
        if (m)
            return m.call(o);
        if (o && typeof o.length === "number")
            return {
                next: function () {
                    if (o && i >= o.length)
                        o = void 0;
                    return { value: o && o[i++], done: !o };
                }
            };
        throw new TypeError(s ? "Object is not iterable." : "Symbol.iterator is not defined.");
    }
    function __read(o, n) {
        var m = typeof Symbol === "function" && o[Symbol.iterator];
        if (!m)
            return o;
        var i = m.call(o), r, ar = [], e;
        try {
            while ((n === void 0 || n-- > 0) && !(r = i.next()).done)
                ar.push(r.value);
        }
        catch (error) {
            e = { error: error };
        }
        finally {
            try {
                if (r && !r.done && (m = i["return"]))
                    m.call(i);
            }
            finally {
                if (e)
                    throw e.error;
            }
        }
        return ar;
    }
    function __spread() {
        for (var ar = [], i = 0; i < arguments.length; i++)
            ar = ar.concat(__read(arguments[i]));
        return ar;
    }
    function __spreadArrays() {
        for (var s = 0, i = 0, il = arguments.length; i < il; i++)
            s += arguments[i].length;
        for (var r = Array(s), k = 0, i = 0; i < il; i++)
            for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)
                r[k] = a[j];
        return r;
    }
    ;
    function __await(v) {
        return this instanceof __await ? (this.v = v, this) : new __await(v);
    }
    function __asyncGenerator(thisArg, _arguments, generator) {
        if (!Symbol.asyncIterator)
            throw new TypeError("Symbol.asyncIterator is not defined.");
        var g = generator.apply(thisArg, _arguments || []), i, q = [];
        return i = {}, verb("next"), verb("throw"), verb("return"), i[Symbol.asyncIterator] = function () { return this; }, i;
        function verb(n) { if (g[n])
            i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }
        function resume(n, v) { try {
            step(g[n](v));
        }
        catch (e) {
            settle(q[0][3], e);
        } }
        function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }
        function fulfill(value) { resume("next", value); }
        function reject(value) { resume("throw", value); }
        function settle(f, v) { if (f(v), q.shift(), q.length)
            resume(q[0][0], q[0][1]); }
    }
    function __asyncDelegator(o) {
        var i, p;
        return i = {}, verb("next"), verb("throw", function (e) { throw e; }), verb("return"), i[Symbol.iterator] = function () { return this; }, i;
        function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === "return" } : f ? f(v) : v; } : f; }
    }
    function __asyncValues(o) {
        if (!Symbol.asyncIterator)
            throw new TypeError("Symbol.asyncIterator is not defined.");
        var m = o[Symbol.asyncIterator], i;
        return m ? m.call(o) : (o = typeof __values === "function" ? __values(o) : o[Symbol.iterator](), i = {}, verb("next"), verb("throw"), verb("return"), i[Symbol.asyncIterator] = function () { return this; }, i);
        function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }
        function settle(resolve, reject, d, v) { Promise.resolve(v).then(function (v) { resolve({ value: v, done: d }); }, reject); }
    }
    function __makeTemplateObject(cooked, raw) {
        if (Object.defineProperty) {
            Object.defineProperty(cooked, "raw", { value: raw });
        }
        else {
            cooked.raw = raw;
        }
        return cooked;
    }
    ;
    var __setModuleDefault = Object.create ? (function (o, v) {
        Object.defineProperty(o, "default", { enumerable: true, value: v });
    }) : function (o, v) {
        o["default"] = v;
    };
    function __importStar(mod) {
        if (mod && mod.__esModule)
            return mod;
        var result = {};
        if (mod != null)
            for (var k in mod)
                if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k))
                    __createBinding(result, mod, k);
        __setModuleDefault(result, mod);
        return result;
    }
    function __importDefault(mod) {
        return (mod && mod.__esModule) ? mod : { default: mod };
    }
    function __classPrivateFieldGet(receiver, privateMap) {
        if (!privateMap.has(receiver)) {
            throw new TypeError("attempted to get private field on non-instance");
        }
        return privateMap.get(receiver);
    }
    function __classPrivateFieldSet(receiver, privateMap, value) {
        if (!privateMap.has(receiver)) {
            throw new TypeError("attempted to set private field on non-instance");
        }
        privateMap.set(receiver, value);
        return value;
    }

    var GeocoderService = /** @class */ (function () {
        function GeocoderService(http) {
            this.http = http;
            this.geocoderBaseUrl = 'https://geodata.nationaalgeoregister.nl/locatieserver/v3';
        }
        GeocoderService.prototype.suggest = function (query, options) {
            var _this = this;
            var params = {
                q: query,
                fq: '*',
                start: 0,
                rows: 10,
            };
            if (options) {
                params = Object.assign(params, options);
            }
            return this.http.get(this.geocoderBaseUrl + "/suggest?", { params: params })
                .toPromise().then(function (suggestResultObject) {
                var collations = _this.formatCollations(suggestResultObject.spellcheck.collations);
                var places = _this.formatPlaces(suggestResultObject);
                return { collations: collations, places: places };
            });
        };
        GeocoderService.prototype.suggest$ = function (query, options) {
            var _this = this;
            var params = {
                q: query,
                fq: '*',
                start: 0,
            };
            if (options) {
                params = Object.assign(params, options);
            }
            return this.http.get(this.geocoderBaseUrl + "/suggest?", { params: params })
                .pipe(operators.map(function (suggestResultObject) {
                var collations = _this.formatCollations(suggestResultObject.spellcheck.collations);
                var places = _this.formatPlaces(suggestResultObject);
                return { collations: collations, places: places };
            }));
        };
        GeocoderService.prototype.lookup = function (id, options) {
            var _this = this;
            var params = {
                id: id,
                fl: '*'
            };
            if (options) {
                params = Object.assign(params, options);
            }
            return this.http.get(this.geocoderBaseUrl + "/lookup?", { params: params }).toPromise().then(function (lookupResponse) {
                return _this.formatLookupResponse(lookupResponse);
            });
        };
        GeocoderService.prototype.lookup$ = function (id, options) {
            var _this = this;
            var params = {
                id: id,
                fl: '*'
            };
            if (options) {
                params = Object.assign(params, options);
            }
            return this.http.get(this.geocoderBaseUrl + "/lookup?", { params: params }).pipe(operators.map(function (lookupResponse) { return _this.formatLookupResponse(lookupResponse); }));
        };
        GeocoderService.prototype.free = function (searchTerm, options) {
            var _this = this;
            var params = {
                q: searchTerm,
                fl: '*',
                fq: '*',
                rows: 10,
                start: 0,
            };
            if (options) {
                params = Object.assign(params, options);
            }
            return this.http.get(this.geocoderBaseUrl + "/free?", { params: params })
                .toPromise().then(function (freeResponse) {
                return _this.formatReverseResponse(freeResponse);
            });
        };
        GeocoderService.prototype.free$ = function (searchTerm, options) {
            var _this = this;
            var params = {
                q: searchTerm,
                fl: '*',
                fq: '*',
                rows: 10,
                start: 0,
            };
            if (options) {
                params = Object.assign(params, options);
            }
            return this.http.get(this.geocoderBaseUrl + "/free?", { params: params }).pipe(operators.map(function (freeResponse) { return _this.formatReverseResponse(freeResponse); }));
        };
        GeocoderService.prototype.reverse = function (location, options) {
            var _this = this;
            var params = {
                type: 'adres',
                fq: '*',
                fl: '*',
                rows: 10,
                distance: 200 // meter,
            };
            if (options) {
                params = Object.assign(params, options, location);
            }
            var reverseUrl = 'https://geodata.nationaalgeoregister.nl/locatieserver/revgeo?';
            return this.http.get(reverseUrl, { params: params }).toPromise().then(function (reverseResponse) {
                return _this.formatReverseResponse(reverseResponse);
            });
        };
        GeocoderService.prototype.reverse$ = function (location, options) {
            var _this = this;
            var params = {
                type: 'adres',
                fq: '*',
                fl: '*',
                rows: 10,
                distance: 200 // meter,
            };
            if (options) {
                params = Object.assign(params, options, location);
            }
            var reverseUrl = 'https://geodata.nationaalgeoregister.nl/locatieserver/revgeo?';
            return this.http.get(reverseUrl, { params: params }).pipe(operators.map(function (reverseResponse) { return _this.formatReverseResponse(reverseResponse); }));
        };
        GeocoderService.prototype.formatCollations = function (collations) {
            var parsedCollations = [];
            for (var i = 0; i < collations.length; i += 2) {
                var collation = {
                    id: i,
                    naam: collations[i + 1].misspellingsAndCorrections[1],
                    weergavenaam: collations[i + 1].hits + " resultaten gevonden voor <strong> " + collations[i + 1].misspellingsAndCorrections[1] + " </strong>",
                    hits: collations[i + 1].hits,
                };
                parsedCollations.push(collation);
            }
            return parsedCollations;
        };
        GeocoderService.prototype.formatPlaces = function (suggestResponse) {
            var places = suggestResponse.response.docs.map(function (place) {
                return Object.assign(Object.assign({}, place), { highlight: suggestResponse.highlighting[place.id].suggest[0] });
            });
            return places;
        };
        /**
         * Parse WKT in lookup response.
         */
        GeocoderService.prototype.formatLookupResponse = function (lookupResponse) {
            var formatted = lookupResponse.response.docs.map(function (lookupResult) {
                var formattedLookupResult = lookupResult;
                if (lookupResult.centroide_ll) {
                    formattedLookupResult.centroide_ll = terraformerWktParser.parse(lookupResult.centroide_ll);
                }
                if (lookupResult.centroide_rd) {
                    formattedLookupResult.centroide_rd = terraformerWktParser.parse(lookupResult.centroide_rd);
                }
                if (lookupResult.geometrie_rd) {
                    formattedLookupResult.geometrie_rd = terraformerWktParser.parse(lookupResult.geometrie_rd);
                }
                if (lookupResult.geometrie_ll) {
                    formattedLookupResult.geometrie_ll = terraformerWktParser.parse(lookupResult.geometrie_ll);
                }
                return formattedLookupResult;
            });
            return formatted[0] || {};
        };
        GeocoderService.prototype.formatReverseResponse = function (lookupResultObject) {
            var formatted = lookupResultObject.response.docs.map(function (reverseResult) {
                var formattedLookupResult = reverseResult;
                if (reverseResult.centroide_ll) {
                    formattedLookupResult.centroide_ll = terraformerWktParser.parse(reverseResult.centroide_ll);
                }
                if (reverseResult.centroide_rd) {
                    formattedLookupResult.centroide_rd = terraformerWktParser.parse(reverseResult.centroide_rd);
                }
                if (reverseResult.geometrie_rd) {
                    formattedLookupResult.geometrie_rd = terraformerWktParser.parse(reverseResult.geometrie_rd);
                }
                if (reverseResult.geometrie_ll) {
                    formattedLookupResult.geometrie_ll = terraformerWktParser.parse(reverseResult.geometrie_ll);
                }
                formattedLookupResult.highlight = reverseResult.weergavenaam;
                return formattedLookupResult;
            });
            return formatted;
        };
        return GeocoderService;
    }());
    GeocoderService.decorators = [
        { type: core.Injectable }
    ];
    GeocoderService.ctorParameters = function () { return [
        { type: http.HttpClient }
    ]; };

    // Leaflet requires the old school way for importing
    var GeocoderComponent = /** @class */ (function () {
        function GeocoderComponent(geocoderService) {
            this.geocoderService = geocoderService;
            this.resultCountLimit = 10;
            this.resultFieldsToShow = [];
            this.placeFound = new core.EventEmitter();
            this.formattedPlaceholder = '';
            this.resultsVisible = true;
            this.places = [];
            this.collations = [];
            this.searchThreshold = 2;
            this.foundPlace = null;
            this.selectedItem = [];
            this.selectedIndex = -1;
            this.subscriptions = [];
            this.searchField = new forms.FormControl();
            this.searchForm = new forms.FormGroup({ search: this.searchField });
            this.subscriptions.push(this.subscribeToSearchFieldValueChanges());
        }
        GeocoderComponent.prototype.clickout = function (event) {
            if (this.geocoderRef.nativeElement.contains(event.target)) {
                this.showResults();
            }
            else {
                this.hideResults();
            }
        };
        GeocoderComponent.prototype.ngOnInit = function () {
            this.formattedPlaceholder = this.formatPlaceholder(this.placeholder);
        };
        GeocoderComponent.prototype.ngOnChanges = function (changes) {
            if (changes.searchInput) {
                this.searchField.setValue(changes.searchInput.currentValue);
            }
        };
        GeocoderComponent.prototype.ngOnDestroy = function () {
            this.subscriptions.forEach(function (s) { return s.unsubscribe(); });
        };
        GeocoderComponent.prototype.subscribeToSearchFieldValueChanges = function () {
            var _this = this;
            return this.searchField.valueChanges.pipe(operators.filter(function (searchInput) { return searchInput.length > _this.searchThreshold; }), operators.debounceTime(100), operators.distinctUntilChanged(), operators.switchMap(function (searchInput) { return _this.suggest(searchInput); })).subscribe(function (suggestResponse) {
                _this.places = suggestResponse.places;
                _this.collations = suggestResponse.collations;
            }); // Actual call is fired.
        };
        GeocoderComponent.prototype.suggest = function (searchTerm) {
            var flArray = __spread(['id', 'score', 'type', 'weergavenaam'], this.resultFieldsToShow);
            var params = {
                fq: '*:*',
                fl: flArray.toString(),
                rows: this.resultCountLimit
            };
            if (this.type) {
                var replace = ',';
                var regex = new RegExp(replace, 'g');
                var query = this.type.replace(regex, ' OR ');
                params.fq = "type:(" + query + ")";
                if (this.province) {
                    params.fq += " AND provincienaam:(" + this.province + ")";
                }
            }
            else if (this.province) {
                params.fq = "provincienaam:(" + this.province + ")";
            }
            return this.geocoderService.suggest$(searchTerm, params);
        };
        GeocoderComponent.prototype.free = function () {
            var _this = this;
            var searchTerm = this.searchField.value;
            var params = { fq: '*:*' };
            if (this.type) {
                var replace = ',';
                var regex = new RegExp(replace, 'g');
                var query = this.type.replace(regex, ' OR ');
                params.fq = "type:(" + query + ")";
                if (this.province) {
                    params.fq += " AND provincienaam:(" + this.province + ")";
                }
            }
            else if (this.province) {
                params.fq = "provincienaam:(" + this.province + ")";
            }
            return this.geocoderService.free$(searchTerm, params).subscribe(function (places) {
                _this.places = places;
            });
        };
        GeocoderComponent.prototype.lookup = function (id) {
            var _this = this;
            this.geocoderService.lookup$(id).subscribe(function (lookupObj) {
                _this.foundPlace = lookupObj;
                if (_this.resultFieldsToShow.length > 0) {
                    var input = _this.resultFieldsToShow.map(function (resultFieldToShow) {
                        return _this.foundPlace[resultFieldToShow];
                    }).join(', ');
                    _this.fillInput(input);
                }
                else {
                    _this.fillInput(_this.foundPlace.weergavenaam);
                }
                _this.placeFound.emit(_this.foundPlace);
                _this.clearPlaces();
            });
        };
        GeocoderComponent.prototype.clear = function () {
            this.foundPlace = null;
            this.searchField.setValue('');
            this.clearPlaces();
        };
        GeocoderComponent.prototype.clearPlaces = function () {
            this.resetIndex();
            this.places = [];
            this.collations = [];
        };
        GeocoderComponent.prototype.handleEnter = function () {
            if (this.selectedIndex === -1) {
                return;
            }
            var selectedPlace = this.places[this.selectedIndex];
            this.lookup(selectedPlace.id);
        };
        GeocoderComponent.prototype.isNoResultsFound = function () {
            var reachedThreshold = (this.searchField.value && this.searchField.value.length) > this.searchThreshold;
            var noSuggestions = this.places.length === 0;
            var noResult = (this.foundPlace == null);
            return (reachedThreshold) && (noSuggestions) && (noResult);
        };
        GeocoderComponent.prototype.showCollations = function () {
            return this.collations.length > 0 && this.places.length === 0;
        };
        GeocoderComponent.prototype.fillInput = function (content, emitEvent) {
            if (emitEvent === void 0) { emitEvent = false; }
            this.searchField.setValue(content, {
                emitEvent: emitEvent
            });
        };
        GeocoderComponent.prototype.isHighlighted = function (i) {
            if (i === this.selectedIndex) {
                return true;
            }
        };
        GeocoderComponent.prototype.moveUp = function () {
            if (this.selectedIndex > 0) {
                this.selectedIndex--;
            }
        };
        GeocoderComponent.prototype.moveDown = function () {
            if (this.selectedIndex < this.places.length) {
                this.selectedIndex++;
            }
        };
        GeocoderComponent.prototype.resetIndex = function () {
            this.selectedIndex = -1;
        };
        GeocoderComponent.prototype.canQuery = function () {
            var searchInput = this.searchField.value;
            return searchInput && searchInput.length > this.searchThreshold;
        };
        GeocoderComponent.prototype.canClear = function () {
            var searchInput = this.searchField.value;
            return searchInput && searchInput.length > 0;
        };
        GeocoderComponent.prototype.formatPlaceholder = function (placeholder) {
            var placeholderText = 'Zoeken op de kaart...';
            if (placeholder) {
                placeholderText = placeholder;
            }
            return placeholderText;
        };
        GeocoderComponent.prototype.onCollationClick = function (name) {
            this.fillInput(name, true);
        };
        GeocoderComponent.prototype.showResults = function () {
            this.resultsVisible = true;
        };
        GeocoderComponent.prototype.hideResults = function () {
            this.resultsVisible = false;
        };
        return GeocoderComponent;
    }());
    GeocoderComponent.decorators = [
        { type: core.Component, args: [{
                    template: "<div #geocoder (keydown.ArrowUp)=\"moveUp()\" (keydown.ArrowDown)=\"moveDown()\" (keydown.Enter)=\"handleEnter()\"\r\n  class=\"geocoder-container\">\r\n  <!-- Input -->\r\n  <div class=\"geocoder-search-container\">\r\n    <form [formGroup]=\"searchForm\">\r\n      <input (focus)=\"showResults()\" formControlName=\"search\" class=\"geocoder-search-input\" [placeholder]=\"formattedPlaceholder\" type=\"text\"\r\n        aria-label=\"Zoeken\" maxlength=\"100\">\r\n    </form>\r\n    <button class=\"searchButton\" aria-label=\"zoeken\" (click)=\"free()\" [ngClass]=\"{'highlight': canQuery()}\"> <svg\r\n        aria-hidden=\"true\" data-fa-processed=\"\" data-prefix=\"fal\" data-icon=\"search\" role=\"img\"\r\n        xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 512 512\" class=\"svg-inline--fa fa-search fa-w-16 fa-9x\">\r\n        <path fill=\"currentColor\"\r\n          d=\"M508.5 481.6l-129-129c-2.3-2.3-5.3-3.5-8.5-3.5h-10.3C395 312 416 262.5 416 208 416 93.1 322.9 0 208 0S0 93.1 0 208s93.1 208 208 208c54.5 0 104-21 141.1-55.2V371c0 3.2 1.3 6.2 3.5 8.5l129 129c4.7 4.7 12.3 4.7 17 0l9.9-9.9c4.7-4.7 4.7-12.3 0-17zM208 384c-97.3 0-176-78.7-176-176S110.7 32 208 32s176 78.7 176 176-78.7 176-176 176z\"\r\n          class=\"\"></path>\r\n      </svg></button>\r\n    <button class=\"closeButton\" aria-label=\"zoekopdracht verwijderen\" (click)=\"clear()\"\r\n      [ngClass]=\"{'highlight': canClear()}\"> <svg aria-hidden=\"true\" data-fa-processed=\"\" data-prefix=\"fal\"\r\n        data-icon=\"times\" role=\"img\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 384 512\"\r\n        class=\"svg-inline--fa fa-times fa-w-12 fa-7x\">\r\n        <path fill=\"currentColor\"\r\n          d=\"M217.5 256l137.2-137.2c4.7-4.7 4.7-12.3 0-17l-8.5-8.5c-4.7-4.7-12.3-4.7-17 0L192 230.5 54.8 93.4c-4.7-4.7-12.3-4.7-17 0l-8.5 8.5c-4.7 4.7-4.7 12.3 0 17L166.5 256 29.4 393.2c-4.7 4.7-4.7 12.3 0 17l8.5 8.5c4.7 4.7 12.3 4.7 17 0L192 281.5l137.2 137.2c4.7 4.7 12.3 4.7 17 0l8.5-8.5c4.7-4.7 4.7-12.3 0-17L217.5 256z\"\r\n          class=\"\"></path>\r\n      </svg></button>\r\n  </div>\r\n  <!-- Search results-->\r\n  <div class=\"geocoder-suggestions-container\" *ngIf=\"resultsVisible === true\">\r\n    <div class=\"geocoder-suggestions-results\" *ngIf=\"places.length > 0\">\r\n      <ul class=\"geocoder-suggestions-list\">\r\n        <li class=\"geocoder-suggestion\" tabindex={{i}} *ngFor=\"let place of places; let i = index;\"\r\n          (click)=\"lookup(place.id)\" [ngClass]=\"{'focus-background': isHighlighted(i)}\">\r\n          <p *ngIf=\"resultFieldsToShow.length === 0\" class=\"geocoder-suggestion-title\" [innerHTML]=\"place.highlight\">\r\n          </p>\r\n          <p *ngIf=\"resultFieldsToShow.length > 0\" class=\"geocoder-suggestion-title\">\r\n            <ng-container *ngFor=\"let field of resultFieldsToShow\">\r\n              {{place[field]}}\r\n            </ng-container>\r\n          </p>\r\n          <p class=\"geocoder-suggestion-type\"> {{place.type}} </p>\r\n        </li>\r\n      </ul>\r\n    </div>\r\n    <div class=\"geocoder-no-results\" *ngIf=\"isNoResultsFound()\">\r\n      <p>Geen zoekresultaten gevonden voor <strong> {{searchField.value}}</strong>.</p>\r\n    </div>\r\n    <div class=\"geocoder-collation-container\" *ngIf=\"showCollations()\">\r\n      <ul class=\"geocoder-collations-list\">\r\n        <li class=\"geocoder-collation\" tabindex={{i}} (click)=\"onCollationClick(collation.naam)\"\r\n          *ngFor=\"let collation of collations; let i = index;\" [innerHTML]=\"collation.weergavenaam\">\r\n        </li>\r\n      </ul>\r\n    </div>\r\n  </div>\r\n</div>\r\n",
                    selector: 'geocoder',
                    styles: ["::-webkit-input-placeholder{color:#797979;font-size:14px}:-moz-placeholder,::-moz-placeholder{color:#797979;font-size:14px}:-ms-input-placeholder{color:#797979;font-size:14px}::-ms-input-placeholder{color:#797979;font-size:14px}:-moz-placeholder-shown{color:#797979;font-size:14px}:placeholder-shown{color:#797979;font-size:14px}:focus{outline:0}input,li,p,span{color:#797979;font-size:14px;margin:0}.geocoder-container{max-width:100%;position:relative;width:100%}.geocoder-search-container{background:#fff;border:none;box-shadow:0 3px 6px rgba(0,0,0,.16),0 3px 6px rgba(0,0,0,.23);width:100%}.geocoder-search-input{border:none;max-width:100%;overflow:hidden;padding:15px;width:95%;width:calc(100% - 80px)}button{cursor:pointer;position:absolute}.searchButton{background:#fff;border:none;border-right:1px solid #797979;padding-right:15px;right:50px;top:13px}.closeButton{background:#fff;border:none;margin-left:16px;right:10px;top:10px}svg{color:#797979;width:18px}.closeButton:hover svg,.highlight svg,.searchButton:hover svg{color:#79abff;transition:all .1s cubic-bezier(.075,.82,.165,1)}.geocoder-suggestions-results{background:#fff;box-shadow:0 3px 6px rgba(0,0,0,.16),0 3px 6px rgba(0,0,0,.23);max-height:400px;overflow-y:auto;position:absolute;top:53px;width:100%;z-index:1}.geocoder-collations-list,.geocoder-suggestions-list{list-style-type:none;margin:0;padding:0}.geocoder-suggestion{border-bottom:1px solid #f1f1f1;padding:15px;position:relative}.geocoder-suggestion-title{max-width:243px}.geocoder-suggestion-type{color:#bfbfbf;font-size:11px;font-weight:700;position:absolute;right:15px;text-transform:uppercase;top:36%}.geocoder-collation:hover,.geocoder-suggestion:hover{background-color:#f7f7f7;cursor:pointer}.focus-background{background-color:#f7f7f7}.geocoder-no-results{background:#fff;box-shadow:0 3px 6px rgba(0,0,0,.16),0 3px 6px rgba(0,0,0,.23);box-sizing:border-box;padding:15px;position:absolute;top:53px;width:100%;z-index:1}.geocoder-collation{z-index:1}.geocoder-collation-container{background:#fff;box-shadow:0 3px 6px rgba(0,0,0,.16),0 3px 6px rgba(0,0,0,.23);position:absolute;top:108px;width:100%;z-index:1}.geocoder-collation-container li{border-bottom:1px solid #f1f1f1;padding:15px}.searchButton{height:20px}.closeButton{height:26px}"]
                },] }
    ];
    GeocoderComponent.ctorParameters = function () { return [
        { type: GeocoderService }
    ]; };
    GeocoderComponent.propDecorators = {
        geocoderRef: [{ type: core.ViewChild, args: ['geocoder', { static: false },] }],
        type: [{ type: core.Input }],
        searchInput: [{ type: core.Input }],
        placeholder: [{ type: core.Input }],
        resultCountLimit: [{ type: core.Input }],
        resultFieldsToShow: [{ type: core.Input }],
        province: [{ type: core.Input }],
        placeFound: [{ type: core.Output }],
        clickout: [{ type: core.HostListener, args: ['document:click', ['$event'],] }]
    };

    var GeocoderModule = /** @class */ (function () {
        function GeocoderModule() {
        }
        return GeocoderModule;
    }());
    GeocoderModule.decorators = [
        { type: core.NgModule, args: [{
                    imports: [
                        http.HttpClientModule,
                        common.CommonModule,
                        forms.ReactiveFormsModule
                    ],
                    exports: [GeocoderComponent],
                    declarations: [GeocoderComponent],
                    providers: [GeocoderService]
                },] }
    ];

    /**
     * Generated bundle index. Do not edit.
     */

    exports.GeocoderModule = GeocoderModule;
    exports.GeocoderService = GeocoderService;
    exports.ɵa = GeocoderComponent;

    Object.defineProperty(exports, '__esModule', { value: true });

})));
//# sourceMappingURL=angular-geocoder.umd.js.map
